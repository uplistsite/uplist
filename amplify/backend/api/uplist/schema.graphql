type User
@model
@key(fields: ["owner"])
@auth(
    rules: [
        { allow: owner, operations: [read] },
        { allow: groups, groups: ["Admin"], operations: [read] },
    ])
{
    owner: String!,
    addresses: [Address] @connection(keyName: "byOwner", fields: ["owner"]),
    items: [Item] @connection(keyName: "byOwner", fields: ["owner"])
}

type Address
@model
@key(name: "byOwner", fields: ["owner", "addressLine1", "addressLine2", "city", "postalCode", "state", "country"])
@auth(
    rules: [
        { allow: owner },
        { allow: groups, groups: ["Admin"], operations: [read] },
    ])
{
    id: ID!,
    owner: String,
    addressLine1: String!,
    addressLine2: String,
    city: String!,
    postalCode: String!,
    state: String!,
    country: String!
}

type Item
@model
@key(name: "byOwner", fields: ["owner", "id", "name", "description", "defects", "year", "make", "model", "wear"])
@auth(
    rules: [
        { allow: owner, operations: [create, read, update] },
        { allow: groups, groups: ["Admin"] },
    ])
{
    id: ID!,
    owner: String,
    name: String!,
    description: String,
    defects: String,
    year: Int,
    make: String,
    model: String,
    wear: Wear,
    address: Address @connection
}

type ProductCategory
@model
@auth(
    rules: [
        { allow: owner, operations: [read] },
        { allow: groups, groups: ["Admin"] },
    ])
{
    id: ID!,
    name: String!,
    code: Int!,
    description: String,
    parentCode: ProductCategory @connection
}

enum Wear {
    POOR,
    WELL_USED,
    USED,
    LIGHTLY_USED,
    LIKE_NEW,
    NEW
}